//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Sifei.Timbrado.Ws.Cliente.timbrado {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SIFEIPortBinding", Namespace="http://MApeados/")]
    public partial class SIFEIService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCFDIProcesaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCFDISignOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCFDIAndURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTimbreCFDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback CambiaPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelaCFDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelaCFDISectorPrimarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelaCFDISignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCFDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCFDISendPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXMLProcesoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SIFEIService() {
            this.Url = global::Sifei.Timbrado.Ws.Cliente.Properties.Settings.Default.Sifei_Timbrado_Ws_Cliente_mx_com_sifei_devcfdi_SIFEIService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCFDIProcesaCompletedEventHandler getCFDIProcesaCompleted;
        
        /// <remarks/>
        public event getCFDISignCompletedEventHandler getCFDISignCompleted;
        
        /// <remarks/>
        public event getCFDIAndURLCompletedEventHandler getCFDIAndURLCompleted;
        
        /// <remarks/>
        public event getTimbreCFDICompletedEventHandler getTimbreCFDICompleted;
        
        /// <remarks/>
        public event CambiaPasswordCompletedEventHandler CambiaPasswordCompleted;
        
        /// <remarks/>
        public event cancelaCFDICompletedEventHandler cancelaCFDICompleted;
        
        /// <remarks/>
        public event cancelaCFDISectorPrimarioCompletedEventHandler cancelaCFDISectorPrimarioCompleted;
        
        /// <remarks/>
        public event cancelaCFDISignatureCompletedEventHandler cancelaCFDISignatureCompleted;
        
        /// <remarks/>
        public event getXMLCompletedEventHandler getXMLCompleted;
        
        /// <remarks/>
        public event getCFDICompletedEventHandler getCFDICompleted;
        
        /// <remarks/>
        public event getCFDISendPDFCompletedEventHandler getCFDISendPDFCompleted;
        
        /// <remarks/>
        public event getXMLProcesoCompletedEventHandler getXMLProcesoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] getCFDIProcesa([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] archivoXMLZip, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Serie, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IdEquipo) {
            object[] results = this.Invoke("getCFDIProcesa", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getCFDIProcesaAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo) {
            this.getCFDIProcesaAsync(Usuario, Password, archivoXMLZip, Serie, IdEquipo, null);
        }
        
        /// <remarks/>
        public void getCFDIProcesaAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo, object userState) {
            if ((this.getCFDIProcesaOperationCompleted == null)) {
                this.getCFDIProcesaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCFDIProcesaOperationCompleted);
            }
            this.InvokeAsync("getCFDIProcesa", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo}, this.getCFDIProcesaOperationCompleted, userState);
        }
        
        private void OngetCFDIProcesaOperationCompleted(object arg) {
            if ((this.getCFDIProcesaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCFDIProcesaCompleted(this, new getCFDIProcesaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] getCFDISign([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] archivoXMLZip, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Serie, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IdEquipo) {
            object[] results = this.Invoke("getCFDISign", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getCFDISignAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo) {
            this.getCFDISignAsync(Usuario, Password, archivoXMLZip, Serie, IdEquipo, null);
        }
        
        /// <remarks/>
        public void getCFDISignAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo, object userState) {
            if ((this.getCFDISignOperationCompleted == null)) {
                this.getCFDISignOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCFDISignOperationCompleted);
            }
            this.InvokeAsync("getCFDISign", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo}, this.getCFDISignOperationCompleted, userState);
        }
        
        private void OngetCFDISignOperationCompleted(object arg) {
            if ((this.getCFDISignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCFDISignCompleted(this, new getCFDISignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] getCFDIAndURL([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] archivoXMLZip, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Serie, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IdEquipo) {
            object[] results = this.Invoke("getCFDIAndURL", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getCFDIAndURLAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo) {
            this.getCFDIAndURLAsync(Usuario, Password, archivoXMLZip, Serie, IdEquipo, null);
        }
        
        /// <remarks/>
        public void getCFDIAndURLAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo, object userState) {
            if ((this.getCFDIAndURLOperationCompleted == null)) {
                this.getCFDIAndURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCFDIAndURLOperationCompleted);
            }
            this.InvokeAsync("getCFDIAndURL", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo}, this.getCFDIAndURLOperationCompleted, userState);
        }
        
        private void OngetCFDIAndURLOperationCompleted(object arg) {
            if ((this.getCFDIAndURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCFDIAndURLCompleted(this, new getCFDIAndURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] getTimbreCFDI([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] archivoXMLZip, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Serie, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IdEquipo) {
            object[] results = this.Invoke("getTimbreCFDI", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getTimbreCFDIAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo) {
            this.getTimbreCFDIAsync(Usuario, Password, archivoXMLZip, Serie, IdEquipo, null);
        }
        
        /// <remarks/>
        public void getTimbreCFDIAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo, object userState) {
            if ((this.getTimbreCFDIOperationCompleted == null)) {
                this.getTimbreCFDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTimbreCFDIOperationCompleted);
            }
            this.InvokeAsync("getTimbreCFDI", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo}, this.getTimbreCFDIOperationCompleted, userState);
        }
        
        private void OngetTimbreCFDIOperationCompleted(object arg) {
            if ((this.getTimbreCFDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTimbreCFDICompleted(this, new getTimbreCFDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool CambiaPassword([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NewPassword) {
            object[] results = this.Invoke("CambiaPassword", new object[] {
                        Usuario,
                        Password,
                        NewPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CambiaPasswordAsync(string Usuario, string Password, string NewPassword) {
            this.CambiaPasswordAsync(Usuario, Password, NewPassword, null);
        }
        
        /// <remarks/>
        public void CambiaPasswordAsync(string Usuario, string Password, string NewPassword, object userState) {
            if ((this.CambiaPasswordOperationCompleted == null)) {
                this.CambiaPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCambiaPasswordOperationCompleted);
            }
            this.InvokeAsync("CambiaPassword", new object[] {
                        Usuario,
                        Password,
                        NewPassword}, this.CambiaPasswordOperationCompleted, userState);
        }
        
        private void OnCambiaPasswordOperationCompleted(object arg) {
            if ((this.CambiaPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CambiaPasswordCompleted(this, new CambiaPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cancelaCFDI([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuarioSIFEI, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rfc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] pfx, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passPFX, [System.Xml.Serialization.XmlElementAttribute("UUIDS", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] UUIDS) {
            object[] results = this.Invoke("cancelaCFDI", new object[] {
                        usuarioSIFEI,
                        passUser,
                        rfc,
                        pfx,
                        passPFX,
                        UUIDS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelaCFDIAsync(string usuarioSIFEI, string passUser, string rfc, byte[] pfx, string passPFX, string[] UUIDS) {
            this.cancelaCFDIAsync(usuarioSIFEI, passUser, rfc, pfx, passPFX, UUIDS, null);
        }
        
        /// <remarks/>
        public void cancelaCFDIAsync(string usuarioSIFEI, string passUser, string rfc, byte[] pfx, string passPFX, string[] UUIDS, object userState) {
            if ((this.cancelaCFDIOperationCompleted == null)) {
                this.cancelaCFDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelaCFDIOperationCompleted);
            }
            this.InvokeAsync("cancelaCFDI", new object[] {
                        usuarioSIFEI,
                        passUser,
                        rfc,
                        pfx,
                        passPFX,
                        UUIDS}, this.cancelaCFDIOperationCompleted, userState);
        }
        
        private void OncancelaCFDIOperationCompleted(object arg) {
            if ((this.cancelaCFDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelaCFDICompleted(this, new cancelaCFDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cancelaCFDISectorPrimario([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuarioSIFEI, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rfc, [System.Xml.Serialization.XmlElementAttribute("UUIDS", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] UUIDS) {
            object[] results = this.Invoke("cancelaCFDISectorPrimario", new object[] {
                        usuarioSIFEI,
                        passUser,
                        rfc,
                        UUIDS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelaCFDISectorPrimarioAsync(string usuarioSIFEI, string passUser, string rfc, string[] UUIDS) {
            this.cancelaCFDISectorPrimarioAsync(usuarioSIFEI, passUser, rfc, UUIDS, null);
        }
        
        /// <remarks/>
        public void cancelaCFDISectorPrimarioAsync(string usuarioSIFEI, string passUser, string rfc, string[] UUIDS, object userState) {
            if ((this.cancelaCFDISectorPrimarioOperationCompleted == null)) {
                this.cancelaCFDISectorPrimarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelaCFDISectorPrimarioOperationCompleted);
            }
            this.InvokeAsync("cancelaCFDISectorPrimario", new object[] {
                        usuarioSIFEI,
                        passUser,
                        rfc,
                        UUIDS}, this.cancelaCFDISectorPrimarioOperationCompleted, userState);
        }
        
        private void OncancelaCFDISectorPrimarioOperationCompleted(object arg) {
            if ((this.cancelaCFDISectorPrimarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelaCFDISectorPrimarioCompleted(this, new cancelaCFDISectorPrimarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cancelaCFDISignature([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string usuarioSIFEI, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passUser, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] archivoZIP) {
            object[] results = this.Invoke("cancelaCFDISignature", new object[] {
                        usuarioSIFEI,
                        passUser,
                        archivoZIP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelaCFDISignatureAsync(string usuarioSIFEI, string passUser, byte[] archivoZIP) {
            this.cancelaCFDISignatureAsync(usuarioSIFEI, passUser, archivoZIP, null);
        }
        
        /// <remarks/>
        public void cancelaCFDISignatureAsync(string usuarioSIFEI, string passUser, byte[] archivoZIP, object userState) {
            if ((this.cancelaCFDISignatureOperationCompleted == null)) {
                this.cancelaCFDISignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelaCFDISignatureOperationCompleted);
            }
            this.InvokeAsync("cancelaCFDISignature", new object[] {
                        usuarioSIFEI,
                        passUser,
                        archivoZIP}, this.cancelaCFDISignatureOperationCompleted, userState);
        }
        
        private void OncancelaCFDISignatureOperationCompleted(object arg) {
            if ((this.cancelaCFDISignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelaCFDISignatureCompleted(this, new cancelaCFDISignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rfc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pass, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string hash) {
            object[] results = this.Invoke("getXML", new object[] {
                        rfc,
                        pass,
                        hash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getXMLAsync(string rfc, string pass, string hash) {
            this.getXMLAsync(rfc, pass, hash, null);
        }
        
        /// <remarks/>
        public void getXMLAsync(string rfc, string pass, string hash, object userState) {
            if ((this.getXMLOperationCompleted == null)) {
                this.getXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXMLOperationCompleted);
            }
            this.InvokeAsync("getXML", new object[] {
                        rfc,
                        pass,
                        hash}, this.getXMLOperationCompleted, userState);
        }
        
        private void OngetXMLOperationCompleted(object arg) {
            if ((this.getXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXMLCompleted(this, new getXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] getCFDI([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] archivoXMLZip, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Serie, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IdEquipo) {
            object[] results = this.Invoke("getCFDI", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getCFDIAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo) {
            this.getCFDIAsync(Usuario, Password, archivoXMLZip, Serie, IdEquipo, null);
        }
        
        /// <remarks/>
        public void getCFDIAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo, object userState) {
            if ((this.getCFDIOperationCompleted == null)) {
                this.getCFDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCFDIOperationCompleted);
            }
            this.InvokeAsync("getCFDI", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo}, this.getCFDIOperationCompleted, userState);
        }
        
        private void OngetCFDIOperationCompleted(object arg) {
            if ((this.getCFDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCFDICompleted(this, new getCFDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] getCFDISendPDF([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] archivoXMLZip, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Serie, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string IdEquipo) {
            object[] results = this.Invoke("getCFDISendPDF", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getCFDISendPDFAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo) {
            this.getCFDISendPDFAsync(Usuario, Password, archivoXMLZip, Serie, IdEquipo, null);
        }
        
        /// <remarks/>
        public void getCFDISendPDFAsync(string Usuario, string Password, byte[] archivoXMLZip, string Serie, string IdEquipo, object userState) {
            if ((this.getCFDISendPDFOperationCompleted == null)) {
                this.getCFDISendPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCFDISendPDFOperationCompleted);
            }
            this.InvokeAsync("getCFDISendPDF", new object[] {
                        Usuario,
                        Password,
                        archivoXMLZip,
                        Serie,
                        IdEquipo}, this.getCFDISendPDFOperationCompleted, userState);
        }
        
        private void OngetCFDISendPDFOperationCompleted(object arg) {
            if ((this.getCFDISendPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCFDISendPDFCompleted(this, new getCFDISendPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://MApeados/", ResponseNamespace="http://MApeados/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] getXMLProceso([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rfc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pass, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long idseguimiento) {
            object[] results = this.Invoke("getXMLProceso", new object[] {
                        rfc,
                        pass,
                        idseguimiento});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getXMLProcesoAsync(string rfc, string pass, long idseguimiento) {
            this.getXMLProcesoAsync(rfc, pass, idseguimiento, null);
        }
        
        /// <remarks/>
        public void getXMLProcesoAsync(string rfc, string pass, long idseguimiento, object userState) {
            if ((this.getXMLProcesoOperationCompleted == null)) {
                this.getXMLProcesoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXMLProcesoOperationCompleted);
            }
            this.InvokeAsync("getXMLProceso", new object[] {
                        rfc,
                        pass,
                        idseguimiento}, this.getXMLProcesoOperationCompleted, userState);
        }
        
        private void OngetXMLProcesoOperationCompleted(object arg) {
            if ((this.getXMLProcesoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXMLProcesoCompleted(this, new getXMLProcesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getCFDIProcesaCompletedEventHandler(object sender, getCFDIProcesaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCFDIProcesaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCFDIProcesaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getCFDISignCompletedEventHandler(object sender, getCFDISignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCFDISignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCFDISignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getCFDIAndURLCompletedEventHandler(object sender, getCFDIAndURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCFDIAndURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCFDIAndURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getTimbreCFDICompletedEventHandler(object sender, getTimbreCFDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTimbreCFDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTimbreCFDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CambiaPasswordCompletedEventHandler(object sender, CambiaPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CambiaPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CambiaPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void cancelaCFDICompletedEventHandler(object sender, cancelaCFDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelaCFDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelaCFDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void cancelaCFDISectorPrimarioCompletedEventHandler(object sender, cancelaCFDISectorPrimarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelaCFDISectorPrimarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelaCFDISectorPrimarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void cancelaCFDISignatureCompletedEventHandler(object sender, cancelaCFDISignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelaCFDISignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelaCFDISignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getXMLCompletedEventHandler(object sender, getXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getCFDICompletedEventHandler(object sender, getCFDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCFDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCFDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getCFDISendPDFCompletedEventHandler(object sender, getCFDISendPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCFDISendPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCFDISendPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getXMLProcesoCompletedEventHandler(object sender, getXMLProcesoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXMLProcesoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXMLProcesoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591